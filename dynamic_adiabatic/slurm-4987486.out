running build_ext
skipping 'lib/qvmc/utils.c' Cython extension (up-to-date)
skipping 'lib/qvmc/state.c' Cython extension (up-to-date)
skipping 'lib/qvmc/optimizer.c' Cython extension (up-to-date)
skipping 'lib/qvmc/debug.c' Cython extension (up-to-date)
skipping 'lib/qvmc/hamiltonian.c' Cython extension (up-to-date)
/home/hanbury.p/env/lib/python3.7/site-packages/numpy/core/numeric.py:538: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/home/hanbury.p/env/lib/python3.7/site-packages/matplotlib/pyplot.py:514: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  max_open_warning, RuntimeWarning)
Run Configurations:
{'deltas': [0.0,
            0.05,
            0.1,
            0.15,
            0.2,
            0.25,
            0.3,
            0.35,
            0.4,
            0.45,
            0.5,
            0.55,
            0.6,
            0.65,
            0.7,
            0.75,
            0.8,
            0.85,
            0.9,
            0.95,
            1.0],
 'fixed_params': ['a', 'b'],
 'initial_diamer_state': 'option_2',
 'name': '8ParticleOption2',
 'notes': '\n'
          '              This is part of a group of three runs that each\n'
          '              test options 1, 2 and 3 to compare different\n'
          '              initial parameters for N=4 to see how that\n'
          '              affects our convergences.\n'
          '              ',
 'num_monte_carlos_per_delta': 350,
 'num_particles': 8,
 'num_steps': 9000,
 'save_dir': '/home/hanbury.p/feiguin/vmc/dynamic_adiabatic/outputs/8ParticleOption2_2019-05-08-12:10'}
**************************************************


N=4
{'a': array([0, 0, 0, 0, 0, 0, 0, 0]), 'b': array([0, 0, 0, 0, 0, 0, 0, 0]), 'w': array([[ 0.04383737+0.75596019j, -0.06357612+0.81361382j,
         0.04270366-0.03303498j, -0.06704342+0.0178923j ,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.1278332 +0.79458657j, -0.09660411+0.76415107j,
         0.129721  -0.01040761j, -0.09713232-0.04084085j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.1718404 -0.00920752j, -0.18287797-0.01280759j,
         0.19170443+0.80590943j, -0.16787538+0.80309269j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.14288604+0.00502023j, -0.09946527+0.01099036j,
         0.13678609+0.7877572j , -0.10872794+0.79642145j,
         0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.04383737+0.75596019j, -0.06357612+0.81361382j,
         0.04270366-0.03303498j, -0.06704342+0.0178923j ],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.1278332 +0.79458657j, -0.09660411+0.76415107j,
         0.129721  -0.01040761j, -0.09713232-0.04084085j],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.1718404 -0.00920752j, -0.18287797-0.01280759j,
         0.19170443+0.80590943j, -0.16787538+0.80309269j],
       [ 0.        +0.j        ,  0.        +0.j        ,
         0.        +0.j        ,  0.        +0.j        ,
         0.14288604+0.00502023j, -0.09946527+0.01099036j,
         0.13678609+0.7877572j , -0.10872794+0.79642145j]])}
**********************************************************************
Output for N=4 Hamiltonian
------------------------------------------------------------
Total time = 4.04136225 hours
Parameters:
{'a': array([0, 0, 0, 0]),
 'b': array([0, 0, 0, 0]),
 'w': array([[ 0.04383737+0.75596019j, -0.06357612+0.81361382j,
         0.04270366-0.03303498j, -0.06704342+0.0178923j ],
       [ 0.1278332 +0.79458657j, -0.09660411+0.76415107j,
         0.129721  -0.01040761j, -0.09713232-0.04084085j],
       [ 0.1718404 -0.00920752j, -0.18287797-0.01280759j,
         0.19170443+0.80590943j, -0.16787538+0.80309269j],
       [ 0.14288604+0.00502023j, -0.09946527+0.01099036j,
         0.13678609+0.7877572j , -0.10872794+0.79642145j]])}
------------------------------------------------------------
Summary: 
Delta: 0.00
Energy: -1.53E+00 + 6.73E-04j
------------------------------------------------------------






Delta: 0.05
Energy: -1.53E+00 + 4.08E-04j
------------------------------------------------------------






Delta: 0.10
Energy: -1.54E+00 + 2.00E-04j
------------------------------------------------------------






Delta: 0.15
Energy: -1.54E+00 + 8.23E-05j
------------------------------------------------------------






Delta: 0.20
Energy: -1.54E+00 + 5.93E-05j
------------------------------------------------------------






Delta: 0.25
Energy: -1.55E+00 + 2.57E-05j
------------------------------------------------------------






Delta: 0.30
Energy: -1.55E+00 + 1.30E-05j
------------------------------------------------------------






Delta: 0.35
Energy: -1.56E+00 + 1.36E-05j
------------------------------------------------------------






Delta: 0.40
Energy: -1.56E+00 + 2.96E-06j
------------------------------------------------------------






Delta: 0.45
Energy: -1.56E+00 + 5.13E-07j
------------------------------------------------------------






Delta: 0.50
Energy: -1.57E+00 + -1.45E-06j
------------------------------------------------------------






Delta: 0.55
Energy: -1.57E+00 + -2.74E-06j
------------------------------------------------------------






Delta: 0.60
Energy: -1.58E+00 + -4.12E-06j
------------------------------------------------------------






Delta: 0.65
Energy: -1.58E+00 + -2.71E-06j
------------------------------------------------------------






Delta: 0.70
Energy: -1.59E+00 + -5.62E-06j
------------------------------------------------------------






Delta: 0.75
Energy: -1.59E+00 + -7.67E-06j
------------------------------------------------------------






Delta: 0.80
Energy: -1.60E+00 + -6.13E-06j
------------------------------------------------------------






Delta: 0.85
Energy: -1.60E+00 + -5.77E-06j
------------------------------------------------------------






Delta: 0.90
Energy: -1.61E+00 + -6.94E-06j
------------------------------------------------------------






Delta: 0.95
Energy: -1.61E+00 + -5.96E-06j
------------------------------------------------------------






Delta: 1.00
Energy: -1.62E+00 + -6.34E-06j
------------------------------------------------------------






N=8
Traceback (most recent call last):
  File "/home/hanbury.p/feiguin/vmc/dynamic_adiabatic/main.py", line 68, in <module>
    energy, optimal_parameters, final_parameters = opt.get_ground_state()
  File "lib/qvmc/optimizer.pyx", line 168, in lib.qvmc.optimizer.Optimizer.get_ground_state
    return min_energy, optimal_parameters, self.parameters
UnboundLocalError: local variable 'optimal_parameters' referenced before assignment

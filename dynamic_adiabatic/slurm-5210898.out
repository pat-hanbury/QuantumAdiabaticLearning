running build_ext
skipping 'lib/qvmc/utils.c' Cython extension (up-to-date)
cythoning lib/qvmc/state.pyx to lib/qvmc/state.c
building 'lib.qvmc.state' extension
gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/home/hanbury.p/env/include -I/shared/centos7/python/3.7.1/include/python3.7m -c lib/qvmc/state.c -o build/temp.linux-x86_64-3.7/lib/qvmc/state.o
gcc -pthread -shared build/temp.linux-x86_64-3.7/lib/qvmc/state.o -L/shared/centos7/python/3.7.1/lib -lpython3.7m -o /home/hanbury.p/feiguin/vmc/dynamic_adiabatic/lib/qvmc/state.cpython-37m-x86_64-linux-gnu.so
cythoning lib/qvmc/optimizer.pyx to lib/qvmc/optimizer.c
building 'lib.qvmc.optimizer' extension
gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/home/hanbury.p/env/include -I/shared/centos7/python/3.7.1/include/python3.7m -c lib/qvmc/optimizer.c -o build/temp.linux-x86_64-3.7/lib/qvmc/optimizer.o
gcc -pthread -shared build/temp.linux-x86_64-3.7/lib/qvmc/optimizer.o -L/shared/centos7/python/3.7.1/lib -lpython3.7m -o /home/hanbury.p/feiguin/vmc/dynamic_adiabatic/lib/qvmc/optimizer.cpython-37m-x86_64-linux-gnu.so
skipping 'lib/qvmc/debug.c' Cython extension (up-to-date)
skipping 'lib/qvmc/hamiltonian.c' Cython extension (up-to-date)
/home/hanbury.p/env/lib/python3.7/site-packages/numpy/core/numeric.py:538: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
Run Configurations:
{'deltas': [0.0,
            0.05,
            0.1,
            0.15,
            0.2,
            0.25,
            0.3,
            0.35,
            0.4,
            0.45,
            0.5,
            0.55,
            0.6,
            0.65,
            0.7,
            0.75,
            0.8,
            0.85,
            0.9,
            0.95,
            1.0],
 'fixed_params': ['a', 'b'],
 'initial_diamer_state': 'option_1',
 'learning_rate': 0.01,
 'name': '8FixedConjugate',
 'noise_scale': 0.01,
 'notes': '\n'
          '              This is to test the fixed\n'
          '              conjugate problem when \n'
          '              taking derivatives\n'
          '              ',
 'num_monte_carlos_per_delta': 200,
 'num_particles': 8,
 'num_steps': 10000,
 'save_dir': '/home/hanbury.p/feiguin/vmc/dynamic_adiabatic/outputs/8FixedConjugate_2019-05-21-08:46'}
**************************************************


N=4
Traceback (most recent call last):
  File "/home/hanbury.p/feiguin/vmc/dynamic_adiabatic/main.py", line 68, in <module>
    energy, optimal_parameters, final_parameters = opt.get_ground_state()
  File "lib/qvmc/optimizer.pyx", line 145, in lib.qvmc.optimizer.Optimizer.get_ground_state
    self.variational_energy, self.exp_delta, self.exp_Q = self.monte_carlo_simulation()
  File "lib/qvmc/optimizer.pyx", line 106, in lib.qvmc.optimizer.Optimizer.monte_carlo_simulation
    state.update_state()
  File "lib/qvmc/state.pyx", line 166, in lib.qvmc.state.State.update_state
    R = compute_R(trial_state)
  File "lib/qvmc/state.pyx", line 155, in lib.qvmc.state.State.update_state.compute_R
    a = trial_state.get_variational_projection()
  File "lib/qvmc/state.pyx", line 120, in lib.qvmc.state.State.get_variational_projection
    self.generate_coefficient()
  File "lib/qvmc/state.pyx", line 48, in lib.qvmc.state.State.generate_coefficient
    w = self.parameters["w"]
KeyError: 'w'
